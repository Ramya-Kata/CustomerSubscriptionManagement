package com.indus.training.microservice.impl;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.oauth2.client.userinfo.DefaultOAuth2UserService;
import org.springframework.security.oauth2.client.userinfo.OAuth2UserRequest;
import org.springframework.security.oauth2.client.userinfo.OAuth2UserService;
import org.springframework.security.oauth2.core.OAuth2AuthenticationException;
import org.springframework.security.oauth2.core.user.DefaultOAuth2User;
import org.springframework.security.oauth2.core.user.OAuth2User;

import com.indus.training.microservice.entity.Status;
import com.indus.training.microservice.entity.Users;
import com.indus.training.microservice.repo.UserRepo;

public class CustomOAuth2UserService implements OAuth2UserService<OAuth2UserRequest, OAuth2User> {

	@Autowired
	private UserRepo userRepo;

	@Autowired
	private JWTService jwtService;

	@Override
	public OAuth2User loadUser(OAuth2UserRequest userRequest) throws OAuth2AuthenticationException {
		OAuth2User oauth2User = new DefaultOAuth2UserService().loadUser(userRequest);

		String email = oauth2User.getAttribute("email");
		String name = oauth2User.getAttribute("name");

		Users user = userRepo.findByEmail(email);
		if (user == null) {
			// Register new OAuth user
			user = new Users();
			user.setEmail(email);
			user.setUsername(name);
			user.setCreatedAt(new Date());
			user.setStatus(Status.active);
			user.setRole("User");
			user.setLastLogin(new Date());
			userRepo.save(user);
		}

		// Generate JWT token for OAuth user
		String token = jwtService.generateToken(user.getUsername(), user.getRole());

		// Optionally, include token in OAuth2User attributes for frontend
		Map<String, Object> attributes = new HashMap<>(oauth2User.getAttributes());
		attributes.put("token", token);

		return new DefaultOAuth2User(Collections.singleton(new SimpleGrantedAuthority("USER")), attributes, "email");
	}

}
