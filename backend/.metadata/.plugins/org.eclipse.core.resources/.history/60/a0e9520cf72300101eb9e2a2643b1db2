package com.indus.training.microservice.exception;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RestControllerAdvice;

import com.ramyakata.microservice.dto.ErrorResponse;

/**
 * Description: Global exception handler for managing and formatting application
 * exceptions. Provides centralized handling for custom and generic exceptions.
 */
@RestControllerAdvice
public class GlobalExceptionHandler {

	/**
	 * Description: Handles CustomerException and returns a standardized error
	 * response.
	 *
	 * @param ex The CustomerException instance.
	 * @return A ResponseEntity containing the error response and HTTP status code
	 *         400.
	 */
	@ExceptionHandler(CustomerException.class)
	public ResponseEntity<ErrorResponse> handleCustomerException(CustomerException ex) {
		ErrorResponse errorResponse = new ErrorResponse(HttpStatus.BAD_REQUEST.value(), ex.getMessage());
		return new ResponseEntity<>(errorResponse, HttpStatus.BAD_REQUEST);
	}

	/**
	 * Description: Handles all other exceptions and returns a standardized error
	 * response.
	 *
	 * @param ex The Exception instance.
	 * @return A ResponseEntity containing the error response and HTTP status code
	 *         500.
	 */
	@ExceptionHandler(Exception.class)
	public ResponseEntity<ErrorResponse> handleGenericException(Exception ex) {
		ErrorResponse errorResponse = new ErrorResponse(HttpStatus.INTERNAL_SERVER_ERROR.value(),
				"An unexpected error occurred.");
		return new ResponseEntity<>(errorResponse, HttpStatus.INTERNAL_SERVER_ERROR);
	}
}
